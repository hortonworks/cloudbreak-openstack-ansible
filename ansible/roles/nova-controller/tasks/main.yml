---
- name: install nova controller components
  yum: name={{ item }} state=latest
  become: true
  with_items:
    - openstack-nova-api
    - openstack-nova-cert
    - openstack-nova-conductor
    - openstack-nova-console
    - openstack-nova-novncproxy
    - openstack-nova-scheduler
    - python-novaclient

- name: Creates scripts
  become: true
  file: path=/opt/scripts state=directory mode="a+x"

- name: create nova-entities
  become: true
  template: src=scripts/nova-init.sh.j2 dest=/opt/scripts/nova-init.sh mode="a+x"
  register: nova_entities

- name: execute nova-entities
  shell: /opt/scripts/nova-init.sh
  when: nova_entities.changed

- name: write the nova config file
  template: src=nova.conf.j2 dest=/etc/nova/nova.conf backup=yes
  become: true
  notify:
    - populate novadb
    - populate nova_apidb
    - restart nova controller

#- name: write the policy.json
#  template: src=policy.json.j2 dest=/etc/nova/policy.json group=nova backup=yes
#  become: true
#  notify:
#    - restart nova controller

- name: Trigger handlers
  meta: flush_handlers

- name: ensure nova-controller services are running
  become: true
  service: name={{ item }} state=started enabled=yes
  with_items:
    - openstack-nova-api
    - openstack-nova-cert
    - openstack-nova-consoleauth
    - openstack-nova-scheduler
    - openstack-nova-conductor
    - openstack-nova-novncproxy

- name: restart nova-controller components by handlers
  shell: echo 'Restarting nova-controller components....'
  tags:
    - restart-components
  notify:
    - restart nova controller